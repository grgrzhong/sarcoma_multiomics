#!/bin/bash

###############################################################################
# Calculate Contamination Script
###############################################################################
# Description: This script calculates cross-sample contamination using GATK
#              CalculateContamination tool. It uses the pileup summary tables
#              generated by GetPileupSummaries.
#
# Input:  - Pileup summary tables for tumor (and normal if available)
# Output: - Contamination table
#         - Tumor segments table
###############################################################################

calculate_contamination() {
    # Validate required global variables
    for var in MUTECT_CALL; do
        if [[ -z "${!var}" ]]; then
            echo "ERROR: Required global variable $var is not set" >&2
            return 1
        fi
    done

    local tumour=$1
    local out_dir="$MUTECT_CALL/${tumour}"
    local case=$(echo "$tumour" | sed -E 's/^(.*?)-(T|N).*$/\1/')
    local normal="${case}-N"
    
    # Check if output directory exists
    if [[ ! -d "$out_dir" ]]; then
        echo "ERROR: Output directory not found: $out_dir" >&2
        return 1
    fi
    
    # Check if tumor pileup summary exists
    if [[ ! -f "${out_dir}/${tumour}.getpileupsummaries.table" ]]; then
        echo "ERROR: Tumor pileup summary not found for ${tumour}" >&2
        return 1
    fi
    
    # Check if normal pileup summary exists for matched analysis
    if [[ -f "${out_dir}/${normal}.getpileupsummaries.table" ]]; then

        log_message "Calculating contamination using matched normal for ${tumour}"

        gatk CalculateContamination \
            -I "${out_dir}/${tumour}.getpileupsummaries.table" \
            -matched "${out_dir}/${normal}.getpileupsummaries.table" \
            -O "${out_dir}/${tumour}.contamination.table" \
            -segments "${out_dir}/${tumour}.segments.table" \
            >& "${out_dir}/${tumour}.CalculateContamination.log"
    else
    
        log_message "Calculating contamination using tumour-only for ${tumour}"

        gatk CalculateContamination \
            -I "${out_dir}/${tumour}.getpileupsummaries.table" \
            -O "${out_dir}/${tumour}.contamination.table" \
            -segments "${out_dir}/${tumour}.segments.table" \
            >& "${out_dir}/${tumour}.CalculateContamination.log"
    fi

}

export -f calculate_contamination